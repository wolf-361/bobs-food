name: Docker images for developpement

on:
  # Triggers the workflow on push or pull request events but only if it's not the "main" branch
  push:
    branches-ignore: [ "main" ]
  pull_request:
    branches-ignore: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Setup docker buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract version and set it to TAG env var for Docker
      - name: Extract version for backend
        run: |
          echo "BACKEND_TAG=v$(jq -r '.version' ./backend/package.json)" >> $GITHUB_ENV
      - name: Extract version for frontend
        run: |
          echo "FRONTEND_TAG=v$(jq -r '.version' ./frontend/package.json)" >> $GITHUB_ENV
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image for the backend
        id: build-and-push-back
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:back-dev-${{ env.BACKEND_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:back-dev-lastest
            
      - name: Build and push Docker image for the frontend
        id: build-and-push-front
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          dockerfile: Dockerfile.dev
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:front-dev-${{ env.FRONTEND_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:front-dev-lastest
